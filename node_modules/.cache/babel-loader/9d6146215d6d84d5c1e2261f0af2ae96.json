{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\RAJAN\\\\calendar\\\\src\\\\CurrentDate.js\";\nimport Modal from '@material-ui/core/Modal';\nimport React, { Component } from 'react';\nimport { Grid, Typography } from '@material-ui/core'; //import IsHoliday from './IsHoliday.js';\n\nclass CurrentDate extends Component {\n  constructor(props) {\n    super();\n\n    this.promiseState = async state => new Promise(resolve => this.setState(state, resolve));\n\n    this.getupholdiayhandler = () => {\n      var today = new Date();\n      var dd = today.getDate();\n      var mm = today.getMonth() + 1;\n      this.state({\n        loading: true\n      });\n      return new Promise((Resolve, Reject) => {\n        var xhr = new XMLHttpRequest();\n        xhr.open(\"GET\", \"\");\n        xhr.send();\n        var temp = [];\n\n        xhr.onreadystatechange = () => {\n          if (xhr.status == 200 && xhr.readyState == 4) {\n            var upcomingdata = JSON.parse(xhr.responseText);\n            temp = this.state.upcomingholidays;\n            temp = upcomingdata.data;\n            this.setstate({\n              upcomingholidays: temp,\n              passedholidays: [],\n              loading: false\n            });\n            Resolve();\n          }\n        };\n      });\n    };\n\n    this.getpassdatahandler = () => {\n      var today = new Date();\n      var dd = today.getDate();\n      var mm = today.getMonth() + 1;\n      this.setState({\n        loading: true\n      });\n      return new Promise((Resolve, Reject) => {\n        var xhr = new XMLHttpRequest();\n        xhr.open(\"GET\", \"https://www.balldontlie.io/api/v1/games\");\n        xhr.send();\n        var temp = [];\n\n        xhr.onreadystatechange = () => {\n          if (xhr.status === 200 && xhr.readyState === 4) {\n            var passeddata = JSON.parse(xhr.responseText);\n            temp = this.state.games;\n            temp = passeddata.data;\n            this.setState({\n              upcomingholidays: [],\n              passedholidays: [],\n              loading: false\n            });\n            Resolve();\n          }\n        };\n      });\n    };\n\n    this.onclickhandler = async e => {\n      var flag = e.target.value;\n      this.promiseState({\n        loading: false\n      }).then(() => {\n        let nowpromise = undefined;\n\n        if (flag === \"one\") {\n          document.getElementsByClassName(\"dataButton\")[0].style.backgroundColor = \"blue\";\n          document.getElementsByClassName(\"dataButton\")[0].style.color = \"black\";\n          document.getElementsByClassName(\"dataButton\")[1].style.backgroundColor = \"white\";\n          document.getElementsByClassName(\"dataButton\")[1].style.color = \"black\";\n          nowpromise = this.getupholdiayhandler();\n        } else {\n          document.getElementsByClassName(\"dataButton\")[1].style.backgroundColor = \"#dedced\";\n          document.getElementsByClassName(\"dataButton\")[1].style.color = \"black\";\n          document.getElementsByClassName(\"dataButton\")[0].style.backgroundColor = \"white\";\n          document.getElementsByClassName(\"dataButton\")[0].style.color = \"black\";\n          nowpromise = this.getpassdatahandler();\n        }\n\n        nowpromise.then(() => this.props.onstatehandler(this.state.upcomingholidays, this.state.passedholidays, flag));\n      });\n    };\n\n    this.state = {\n      loading: true,\n      upcomingholidays: [],\n      passedholidays: []\n    };\n  }\n\n  componentDidMount() {\n    setTimeout(() => {\n      this.onclickhandler({\n        target: {\n          value: \"one\"\n        }\n      });\n    }, 2000);\n  }\n\n  getLoadingScreen(clickHandler) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      id: \"logo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"No holiday\"), React.createElement(\"button\", {\n      classname: \"dataButton\",\n      value: \"one\",\n      onClick: clickHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"Upcoming Holidays\"), React.createElement(\"button\", {\n      classname: \"dataButton\",\n      value: \"two\",\n      onClick: clickHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"Passed Holidays\"), React.createElement(Grid, {\n      item: true,\n      lg: 3,\n      md: 4,\n      xs: 12,\n      style: {\n        margin: \"60px auto\",\n        textAlign: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"h2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"Loading....\")));\n  }\n\n  render() {\n    if (this.state.loading === true) {\n      return this.getLoadingScreen(this.onclickhandler);\n    } else return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      id: \"logo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, \"No Holiday\"), React.createElement(\"button\", {\n      classname: \"dataButton\",\n      value: \"one\",\n      onclick: this.clickHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \"Upcoming Holidays\"), React.createElement(\"button\", {\n      classname: \"dataButton\",\n      value: \"two\",\n      onclick: this.clickHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, \"Passed Holidays\"));\n  }\n\n}\n\nexport default CurrentDate;","map":{"version":3,"sources":["C:\\Users\\RAJAN\\calendar\\src\\CurrentDate.js"],"names":["Modal","React","Component","Grid","Typography","CurrentDate","constructor","props","promiseState","state","Promise","resolve","setState","getupholdiayhandler","today","Date","dd","getDate","mm","getMonth","loading","Resolve","Reject","xhr","XMLHttpRequest","open","send","temp","onreadystatechange","status","readyState","upcomingdata","JSON","parse","responseText","upcomingholidays","data","setstate","passedholidays","getpassdatahandler","passeddata","games","onclickhandler","e","flag","target","value","then","nowpromise","undefined","document","getElementsByClassName","style","backgroundColor","color","onstatehandler","componentDidMount","setTimeout","getLoadingScreen","clickHandler","margin","textAlign","render"],"mappings":"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","sourcesContent":["\r\nimport Modal from '@material-ui/core/Modal';\r\nimport React, { Component } from 'react';\r\nimport { Grid, Typography } from '@material-ui/core';\r\n//import IsHoliday from './IsHoliday.js';\r\nclass CurrentDate extends Component\r\n{\r\n\r\n  constructor(props)\r\n  {\r\n    super();\r\n    this.state={\r\n      loading:true,\r\n      upcomingholidays:[],\r\n      passedholidays:[]\r\n    }\r\n\r\n  }\r\n  promiseState=async state=> new Promise(resolve=> this.setState(state,resolve));\r\n  componentDidMount(){\r\n    setTimeout(()=>{this.onclickhandler({target: {value:\"one\"}})},2000);\r\n  }\r\ngetupholdiayhandler=()=>\r\n{\r\n  var today=new Date();\r\nvar dd=today.getDate();\r\nvar mm = today.getMonth()+1;\r\n  this.state({loading:true});\r\n  return new Promise((Resolve,Reject) =>{\r\n    var xhr=new XMLHttpRequest();\r\n    xhr.open(\"GET\",\"\");\r\n    xhr.send();\r\n    var temp=[];\r\n    xhr.onreadystatechange=()=>{\r\n      if(xhr.status==200 && xhr.readyState==4)\r\n      {\r\n        var upcomingdata=JSON.parse(xhr.responseText);\r\n        temp=this.state.upcomingholidays;\r\n        temp=upcomingdata.data;\r\n        this.setstate({upcomingholidays:temp,passedholidays: [],loading:false});\r\n        Resolve();\r\n\r\n      }\r\n    }\r\n  });\r\n}\r\n\r\ngetpassdatahandler = () => {\r\n  var today=new Date();\r\nvar dd=today.getDate();\r\nvar mm = today.getMonth()+1;\r\n       this.setState({ loading: true });\r\n       return new Promise((Resolve, Reject) => {\r\n           var xhr = new XMLHttpRequest();\r\n           xhr.open(\"GET\", \"https://www.balldontlie.io/api/v1/games\");\r\n           xhr.send();\r\n           var temp = [];\r\n           xhr.onreadystatechange = () => {\r\n               if (xhr.status === 200 && xhr.readyState === 4) {\r\n                   var passeddata = JSON.parse(xhr.responseText);\r\n                   temp = this.state.games;\r\n                   temp = passeddata.data;\r\n                   this.setState({ upcomingholidays:[],passedholidays :[], loading: false });\r\n                   Resolve();\r\n               }\r\n           }\r\n\r\n       });\r\n   }\r\nonclickhandler =async(e)=>{\r\n  var flag=e.target.value;\r\n  this.promiseState({loading:false}).then(()=>{\r\n   let nowpromise = undefined;\r\n    if(flag===\"one\"){\r\n      document.getElementsByClassName(\"dataButton\")[0].style.backgroundColor = \"blue\";\r\n                   document.getElementsByClassName(\"dataButton\")[0].style.color = \"black\";\r\n                   document.getElementsByClassName(\"dataButton\")[1].style.backgroundColor = \"white\";\r\n                   document.getElementsByClassName(\"dataButton\")[1].style.color = \"black\";\r\n                   nowpromise = this.getupholdiayhandler();\r\n    }\r\n    else {\r\n                   document.getElementsByClassName(\"dataButton\")[1].style.backgroundColor = \"#dedced\";\r\n                   document.getElementsByClassName(\"dataButton\")[1].style.color = \"black\";\r\n                   document.getElementsByClassName(\"dataButton\")[0].style.backgroundColor = \"white\";\r\n                   document.getElementsByClassName(\"dataButton\")[0].style.color = \"black\";\r\n                   nowpromise = this.getpassdatahandler();\r\n               }\r\n               nowpromise.then(() => this.props.onstatehandler(this.state.upcomingholidays, this.state.passedholidays, flag));\r\n  }\r\n);\r\n\r\n}\r\n\r\ngetLoadingScreen(clickHandler){\r\n\r\n  return(\r\n    <div>\r\n    <h2 id=\"logo\">No holiday</h2>\r\n    <button classname=\"dataButton\" value=\"one\" onClick={clickHandler}>Upcoming Holidays</button>\r\n        <button classname=\"dataButton\" value=\"two\" onClick={clickHandler}>Passed Holidays</button>\r\n        <Grid item lg={3} md={4} xs={12} style={{ margin: \"60px auto\", textAlign: \"center\" }}>\r\n              <Typography variant=\"h2\" >\r\n                  Loading....\r\n                </Typography>\r\n          </Grid>\r\n    </div>\r\n  );\r\n}\r\nrender(){\r\n  if (this.state.loading === true) {\r\n          return (this.getLoadingScreen(this.onclickhandler));\r\n      }\r\n      else\r\n          return (\r\n              <div>\r\n                  <h2 id=\"logo\">No Holiday</h2>\r\n                  <button classname=\"dataButton\" value=\"one\" onclick={this.clickHandler}>Upcoming Holidays</button>\r\n                      <button classname=\"dataButton\" value=\"two\" onclick={this.clickHandler}>Passed Holidays</button>\r\n              </div>\r\n          )\r\n  }\r\n}\r\n\r\nexport default CurrentDate;\r\n"]},"metadata":{},"sourceType":"module"}