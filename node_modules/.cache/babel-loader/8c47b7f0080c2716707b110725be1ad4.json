{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\RAJAN\\\\calendar\\\\src\\\\CurrentDate.js\";\nimport Modal from '@material-ui/core/Modal';\nimport React, { Component } from 'react';\nimport { Grid, Typography } from '@material-ui/core'; //import IsHoliday from './IsHoliday.js';\n\nclass CurrentDate extends Component {\n  constructor(props) {\n    this.state = {\n      loading: true,\n      upcomingholidays: [],\n      passedholidays: []\n    };\n  }\n\n  componentDidMount() {\n    setTimeout(() => {\n      this.onclickhandler({\n        target: {\n          value: \"one\"\n        }\n      });\n    }, 2000);\n  }\n\n  render() {\n    if (this.state.loading === true) {\n      return getLoadingScreen(this.onclickhandler);\n    } else return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      id: \"logo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"No Holiday\"), React.createElement(\"button\", {\n      classname: \"dataButton\",\n      value: \"one\",\n      onclick: this.clickHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"Upcoming Holidays\"), React.createElement(\"button\", {\n      classname: \"dataButton\",\n      value: \"two\",\n      onclick: this.clickHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"Passed Holidays\"));\n  }\n\n}\n\nexport default CurrentDate;","map":{"version":3,"sources":["C:\\Users\\RAJAN\\calendar\\src\\CurrentDate.js"],"names":["Modal","React","Component","Grid","Typography","CurrentDate","constructor","props","state","loading","upcomingholidays","passedholidays","componentDidMount","setTimeout","onclickhandler","target","value","render","getLoadingScreen","clickHandler"],"mappings":";AACA,OAAOA,KAAP,MAAkB,yBAAlB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,EAAeC,UAAf,QAAiC,mBAAjC,C,CACA;;AACA,MAAMC,WAAN,SAA0BH,SAA1B,CACA;AACEI,EAAAA,WAAW,CAACC,KAAD,EACX;AACE,SAAKC,KAAL,GAAW;AACTC,MAAAA,OAAO,EAAC,IADC;AAETC,MAAAA,gBAAgB,EAAC,EAFR;AAGTC,MAAAA,cAAc,EAAC;AAHN,KAAX;AAMD;;AAEDC,EAAAA,iBAAiB,GAAE;AACjBC,IAAAA,UAAU,CAAC,MAAI;AAAC,WAAKC,cAAL,CAAoB;AAACC,QAAAA,MAAM,EAAE;AAACC,UAAAA,KAAK,EAAC;AAAP;AAAT,OAApB;AAA6C,KAAnD,EAAoD,IAApD,CAAV;AACD;;AAmEHC,EAAAA,MAAM,GAAE;AACN,QAAI,KAAKT,KAAL,CAAWC,OAAX,KAAuB,IAA3B,EAAiC;AACzB,aAAQS,gBAAgB,CAAC,KAAKJ,cAAN,CAAxB;AACH,KAFL,MAIQ,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAI,MAAA,EAAE,EAAC,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,EAEI;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAA+B,MAAA,KAAK,EAAC,KAArC;AAA2C,MAAA,OAAO,EAAE,KAAKK,YAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAFJ,EAGQ;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAA+B,MAAA,KAAK,EAAC,KAArC;AAA2C,MAAA,OAAO,EAAE,KAAKA,YAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAHR,CADJ;AAOP;;AA5FH;;AA+FA,eAAed,WAAf","sourcesContent":["\r\nimport Modal from '@material-ui/core/Modal';\r\nimport React, { Component } from 'react';\r\nimport { Grid, Typography } from '@material-ui/core';\r\n//import IsHoliday from './IsHoliday.js';\r\nclass CurrentDate extends Component\r\n{\r\n  constructor(props)\r\n  {\r\n    this.state={\r\n      loading:true,\r\n      upcomingholidays:[],\r\n      passedholidays:[]\r\n    }\r\n\r\n  }\r\n  promiseState=async state=> new Promise(resolve=> this.setState(state,resolve));\r\n  componentDidMount(){\r\n    setTimeout(()=>{this.onclickhandler({target: {value:\"one\"}})},2000);\r\n  }\r\ngetupholdiayhandler=()=>\r\n{\r\n  this.state({loading:true});\r\n  return new Promise((Resolve,Reject) =>{\r\n    var xhr=new XMLHttpRequest();\r\n    xhr.open(\"GET\",\"\");\r\n    xhr.send();\r\n    var temp=[];\r\n    xhr.onreadystatechange=()=>{\r\n      if(xhr.status==200 && xhr.readyState==4)\r\n      {\r\n        var upcomingdata=JSON.parse(xhr.responseText);\r\n        temp=this.state.upcomingholidays;\r\n        temp=upcomingdata.data;\r\n        this.setstate({upcomingholidays:temp,passedholidays: [],loading:false});\r\n        Resolve();\r\n\r\n      }\r\n    }\r\n  });\r\n}\r\n\r\ngetpassdatahandler = () => {\r\n       this.setState({ loading: true });\r\n       return new Promise((Resolve, Reject) => {\r\n           var xhr = new XMLHttpRequest();\r\n           xhr.open(\"GET\", \"https://www.balldontlie.io/api/v1/games\");\r\n           xhr.send();\r\n           var temp = [];\r\n           xhr.onreadystatechange = () => {\r\n               if (xhr.status === 200 && xhr.readyState === 4) {\r\n                   var passeddata = JSON.parse(xhr.responseText);\r\n                   temp = this.state.games;\r\n                   temp = passeddata.data;\r\n                   this.setState({ upcomingholidays:[],passedholidays :[], loading: false });\r\n                   Resolve();\r\n               }\r\n           }\r\n\r\n       });\r\n   }\r\nonlclickhandler =async(e)=>{\r\n  var flag=e.target.value;\r\n  this.promiseState({loading:false}).then(()=>{\r\n   let nowpromise = undefined;\r\n    if(flag===\"one\"){\r\n      document.getElementsByClassName(\"dataButton\")[0].style.backgroundColor = \"#dedced\";\r\n                   document.getElementsByClassName(\"dataButton\")[0].style.color = \"black\";\r\n                   document.getElementsByClassName(\"dataButton\")[1].style.backgroundColor = \"white\";\r\n                   document.getElementsByClassName(\"dataButton\")[1].style.color = \"black\";\r\n                   nowpromise = this.getupholdiayhandler();\r\n    }\r\n    else {\r\n                   document.getElementsByClassName(\"dataButton\")[1].style.backgroundColor = \"#dedced\";\r\n                   document.getElementsByClassName(\"dataButton\")[1].style.color = \"black\";\r\n                   document.getElementsByClassName(\"dataButton\")[0].style.backgroundColor = \"white\";\r\n                   document.getElementsByClassName(\"dataButton\")[0].style.color = \"black\";\r\n                   nowpromise = this.getpassdatahandler();\r\n               }\r\n               nowpromise.then(() => this.props.onstatehandler(this.state.upcomingholidays, this.state.passedholidays, flag));\r\n  }\r\n);\r\n\r\n}\r\n\r\n\r\nrender(){\r\n  if (this.state.loading === true) {\r\n          return (getLoadingScreen(this.onclickhandler));\r\n      }\r\n      else\r\n          return (\r\n              <div>\r\n                  <h2 id=\"logo\">No Holiday</h2>\r\n                  <button classname=\"dataButton\" value=\"one\" onclick={this.clickHandler}>Upcoming Holidays</button>\r\n                      <button classname=\"dataButton\" value=\"two\" onclick={this.clickHandler}>Passed Holidays</button>\r\n              </div>\r\n          )\r\n  }\r\n}\r\n\r\nexport default CurrentDate;\r\n"]},"metadata":{},"sourceType":"module"}