{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\RAJAN\\\\calendar\\\\src\\\\CurrentDate.js\";\nimport React, { Component } from 'react';\nimport { Grid, Typography } from '@material-ui/core';\n\nfunction getLoadingScreen(clickHandler) {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    id: \"logo\",\n    style: {\n      color: \"black\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, istodayholiday), React.createElement(\"button\", {\n    className: \"dataButton\",\n    value: \"one\",\n    onClick: clickHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, \"Upcoming Holidays\"), React.createElement(\"button\", {\n    className: \"dataButton\",\n    value: \"two\",\n    onClick: clickHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, \"Passed Holidays\"), React.createElement(Grid, {\n    item: true,\n    lg: 3,\n    md: 4,\n    xs: 12,\n    style: {\n      margin: \"60px auto\",\n      textAlign: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"h2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, \"Loading.... // \")));\n} // function Noholidaytoday(clickHandler){\n//\n//   return(\n//     <div>\n//   <h2 id=\"logo\" style={{ color: \"black\" }}>No Holiday</h2>\n//     <button className=\"dataButton\" value=\"one\" onClick={clickHandler}>Upcoming Holidays</button>\n//         <button className=\"dataButton\" value=\"two\" onClick={clickHandler}>Passed Holidays</button>\n//         <Grid item lg={3} md={4} xs={12} style={{ margin: \"60px auto\", textAlign: \"center\" }}>\n//               <Typography variant=\"h2\" >\n//                   Loading....\n//                 </Typography>\n//           </Grid>\n//     </div>\n//   );\n// }\n//\n// function confirmholidaytoday(clickHandler){\n//\n//   return(\n//     <div>\n//   <h2 id=\"logo\" style={{ color: \"black\" }}>No Holiday</h2>\n//     <button className=\"dataButton\" value=\"one\" onClick={clickHandler}>Upcoming Holidays</button>\n//         <button className=\"dataButton\" value=\"two\" onClick={clickHandler}>Passed Holidays</button>\n//         <Grid item lg={3} md={4} xs={12} style={{ margin: \"60px auto\", textAlign: \"center\" }}>\n//               <Typography variant=\"h2\" >\n//                   Loading....\n//                 </Typography>\n//           </Grid>\n//     </div>\n//   );\n// }\n\n\nlet istodayholiday = () => {\n  var a = new Date();\n  var dd = a.getDate();\n  var mm = a.getMonth(); // this.setState({ loading: true });\n\n  var xhr = new XMLHttpRequest();\n  xhr.open(\"GET\", \"https://calendarific.com/api/v2/holidays?api_key=696fef8caac836370f2930195a5821426f3bf624&country=IN&year=2019&month=mm&day=dd\");\n  xhr.send();\n  var temp = [];\n\n  xhr.onreadystatechange = () => {\n    if (xhr.status === 200 && xhr.readyState === 4) {\n      var passeddata = JSON.parse(xhr.responseText);\n      console.log(passeddata); // if(passeddata.response.holidays!==null)\n      // {\n      //   return(\n      //     <p>Hey, you got Holiday today.</p>\n      //     <p>{passeddata.response.holidays.name}</p>\n      //     <p>{passeddata.response.holidays.type}</p>\n      //   )\n      // }\n      // else{\n      //   return(\n      //     <p>No Holiday</p>\n      //   )\n      // }\n    }\n  };\n};\n\nclass CurrentDate extends Component {\n  constructor(props) {\n    super();\n\n    this.promiseState = async state => new Promise(resolve => this.setState(state, resolve));\n\n    this.getupholdiayhandler = () => {\n      this.setState({\n        loading: true\n      });\n      return new Promise((Resolve, Reject) => {\n        var xhr = new XMLHttpRequest();\n        xhr.open(\"GET\", \"https://calendarific.com/api/v2/holidays?api_key=696fef8caac836370f2930195a5821426f3bf624&country=IN&year=2019\");\n        xhr.send();\n        var temp = [];\n\n        xhr.onreadystatechange = () => {\n          if (xhr.status == 200 && xhr.readyState == 4) {\n            var upcomingdata = JSON.parse(xhr.responseText);\n            temp = this.state.upcomingholidays;\n            temp = upcomingdata.response.holidays;\n            this.setState({\n              upcomingholidays: temp,\n              passedholidays: [],\n              loading: false\n            });\n            Resolve();\n          }\n        };\n      });\n    };\n\n    this.getpassdatahandler = () => {\n      this.setState({\n        loading: true\n      });\n      return new Promise((Resolve, Reject) => {\n        var xhr = new XMLHttpRequest();\n        xhr.open(\"GET\", \"https://calendarific.com/api/v2/holidays?api_key=696fef8caac836370f2930195a5821426f3bf624&country=IN&year=2019\");\n        xhr.send();\n        var temp = [];\n\n        xhr.onreadystatechange = () => {\n          if (xhr.status === 200 && xhr.readyState === 4) {\n            var passeddata = JSON.parse(xhr.responseText);\n            temp = this.state.passedholidays;\n            temp = passeddata.response.holidays;\n            this.setState({\n              upcomingholidays: [],\n              passedholidays: temp,\n              loading: false\n            });\n            Resolve();\n          }\n        };\n      });\n    };\n\n    this.onclickhandler = async e => {\n      var flag = e.target.value;\n      this.promiseState({\n        loading: false\n      }).then(() => {\n        let nowpromise = undefined; // nowpromise=this.istodayholiday();\n\n        if (flag === \"one\") {\n          document.getElementsByClassName(\"dataButton\")[0].style.backgroundColor = \"whitesmoke\";\n          document.getElementsByClassName(\"dataButton\")[0].style.color = \"black\";\n          document.getElementsByClassName(\"dataButton\")[1].style.backgroundColor = \"white\";\n          document.getElementsByClassName(\"dataButton\")[1].style.color = \"black\";\n          nowpromise = this.getupholdiayhandler();\n        } else {\n          document.getElementsByClassName(\"dataButton\")[1].style.backgroundColor = \"whitesmoke\";\n          document.getElementsByClassName(\"dataButton\")[1].style.color = \"black\";\n          document.getElementsByClassName(\"dataButton\")[0].style.backgroundColor = \"white\";\n          document.getElementsByClassName(\"dataButton\")[0].style.color = \"black\";\n          nowpromise = this.getpassdatahandler();\n        }\n\n        nowpromise.then(() => this.props.onstatehandler(this.state.upcomingholidays, this.state.passedholidays, flag));\n      });\n    };\n\n    this.state = {\n      loading: true,\n      upcomingholidays: [],\n      passedholidays: []\n    };\n  }\n\n  componentDidMount() {\n    setTimeout(() => {\n      this.onclickhandler({\n        target: {\n          value: \"one\"\n        }\n      });\n    }, 2000);\n  }\n\n  render() {\n    if (this.state.loading === true) {\n      return getLoadingScreen(this.onclickhandler);\n    } else return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      id: \"logo\",\n      style: {\n        color: \"black\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, this.istodayholiday), React.createElement(\"button\", {\n      className: \"dataButton\",\n      value: \"one\",\n      onClick: this.onclickhandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, \"Upcoming Holidays\"), React.createElement(\"button\", {\n      className: \"dataButton\",\n      value: \"two\",\n      onClick: this.onclickhandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, \"Passed Holidays\"));\n  }\n\n}\n\nexport default CurrentDate;","map":{"version":3,"sources":["C:\\Users\\RAJAN\\calendar\\src\\CurrentDate.js"],"names":["React","Component","Grid","Typography","getLoadingScreen","clickHandler","color","istodayholiday","margin","textAlign","a","Date","dd","getDate","mm","getMonth","xhr","XMLHttpRequest","open","send","temp","onreadystatechange","status","readyState","passeddata","JSON","parse","responseText","console","log","CurrentDate","constructor","props","promiseState","state","Promise","resolve","setState","getupholdiayhandler","loading","Resolve","Reject","upcomingdata","upcomingholidays","response","holidays","passedholidays","getpassdatahandler","onclickhandler","e","flag","target","value","then","nowpromise","undefined","document","getElementsByClassName","style","backgroundColor","onstatehandler","componentDidMount","setTimeout","render"],"mappings":"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","sourcesContent":["\r\nimport React, { Component } from 'react';\r\nimport { Grid, Typography } from '@material-ui/core';\r\n\r\nfunction getLoadingScreen(clickHandler){\r\n\r\n  return(\r\n    <div>\r\n  <h2 id=\"logo\" style={{ color: \"black\" }}>{istodayholiday}</h2>\r\n    <button className=\"dataButton\" value=\"one\" onClick={clickHandler}>Upcoming Holidays</button>\r\n        <button className=\"dataButton\" value=\"two\" onClick={clickHandler}>Passed Holidays</button>\r\n        <Grid item lg={3} md={4} xs={12} style={{ margin: \"60px auto\", textAlign: \"center\" }}>\r\n              <Typography variant=\"h2\" >\r\n                  Loading....\r\n                // </Typography>\r\n          </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\n// function Noholidaytoday(clickHandler){\r\n//\r\n//   return(\r\n//     <div>\r\n//   <h2 id=\"logo\" style={{ color: \"black\" }}>No Holiday</h2>\r\n//     <button className=\"dataButton\" value=\"one\" onClick={clickHandler}>Upcoming Holidays</button>\r\n//         <button className=\"dataButton\" value=\"two\" onClick={clickHandler}>Passed Holidays</button>\r\n//         <Grid item lg={3} md={4} xs={12} style={{ margin: \"60px auto\", textAlign: \"center\" }}>\r\n//               <Typography variant=\"h2\" >\r\n//                   Loading....\r\n//                 </Typography>\r\n//           </Grid>\r\n//     </div>\r\n//   );\r\n// }\r\n//\r\n// function confirmholidaytoday(clickHandler){\r\n//\r\n//   return(\r\n//     <div>\r\n//   <h2 id=\"logo\" style={{ color: \"black\" }}>No Holiday</h2>\r\n//     <button className=\"dataButton\" value=\"one\" onClick={clickHandler}>Upcoming Holidays</button>\r\n//         <button className=\"dataButton\" value=\"two\" onClick={clickHandler}>Passed Holidays</button>\r\n//         <Grid item lg={3} md={4} xs={12} style={{ margin: \"60px auto\", textAlign: \"center\" }}>\r\n//               <Typography variant=\"h2\" >\r\n//                   Loading....\r\n//                 </Typography>\r\n//           </Grid>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\nlet istodayholiday= ()=>{\r\n  var a = new Date();\r\n    var dd = a.getDate();\r\n    var mm = a.getMonth();\r\n  // this.setState({ loading: true });\r\n      var xhr = new XMLHttpRequest();\r\n      xhr.open(\"GET\", \"https://calendarific.com/api/v2/holidays?api_key=696fef8caac836370f2930195a5821426f3bf624&country=IN&year=2019&month=mm&day=dd\");\r\n      xhr.send();\r\n      var temp = [];\r\n      xhr.onreadystatechange = () => {\r\n          if (xhr.status === 200 && xhr.readyState === 4) {\r\n              var passeddata = JSON.parse(xhr.responseText);\r\n              console.log(passeddata);\r\n              // if(passeddata.response.holidays!==null)\r\n              // {\r\n              //   return(\r\n              //     <p>Hey, you got Holiday today.</p>\r\n              //     <p>{passeddata.response.holidays.name}</p>\r\n              //     <p>{passeddata.response.holidays.type}</p>\r\n              //   )\r\n              // }\r\n              // else{\r\n              //   return(\r\n              //     <p>No Holiday</p>\r\n              //   )\r\n              // }\r\n          }\r\n      }\r\n\r\n\r\n}\r\nclass CurrentDate extends Component\r\n{\r\n\r\n  constructor(props)\r\n  {\r\n    super();\r\n    this.state={\r\n      loading:true,\r\n      upcomingholidays:[],\r\n      passedholidays:[]\r\n    }\r\n\r\n  }\r\n  promiseState=async state=> new Promise(resolve=> this.setState(state,resolve));\r\n  componentDidMount(){\r\n    setTimeout(()=>{this.onclickhandler({target: {value:\"one\"}})},2000);\r\n  }\r\ngetupholdiayhandler=()=>\r\n{\r\n this.setState({ loading: true });\r\n  return new Promise((Resolve,Reject) =>{\r\n    var xhr=new XMLHttpRequest();\r\n    xhr.open(\"GET\",\"https://calendarific.com/api/v2/holidays?api_key=696fef8caac836370f2930195a5821426f3bf624&country=IN&year=2019\");\r\n    xhr.send();\r\n    var temp=[];\r\n    xhr.onreadystatechange=()=>{\r\n      if(xhr.status==200 && xhr.readyState==4)\r\n      {\r\n        var upcomingdata=JSON.parse(xhr.responseText);\r\n\r\n        temp=this.state.upcomingholidays;\r\n\r\n        temp=upcomingdata.response.holidays;\r\n\r\n        this.setState({upcomingholidays:temp,passedholidays: [],loading:false});\r\n        Resolve();\r\n\r\n      }\r\n    }\r\n  });\r\n}\r\n\r\ngetpassdatahandler = () => {\r\n       this.setState({ loading: true });\r\n       return new Promise((Resolve, Reject) => {\r\n           var xhr = new XMLHttpRequest();\r\n           xhr.open(\"GET\", \"https://calendarific.com/api/v2/holidays?api_key=696fef8caac836370f2930195a5821426f3bf624&country=IN&year=2019\");\r\n           xhr.send();\r\n           var temp = [];\r\n           xhr.onreadystatechange = () => {\r\n               if (xhr.status === 200 && xhr.readyState === 4) {\r\n                   var passeddata = JSON.parse(xhr.responseText);\r\n                   temp = this.state.passedholidays;\r\n                   temp = passeddata.response.holidays;\r\n                   this.setState({ upcomingholidays:[],passedholidays : temp, loading: false });\r\n                   Resolve();\r\n               }\r\n           }\r\n\r\n       });\r\n   }\r\n\r\nonclickhandler =async(e)=>{\r\n\r\n  var flag=e.target.value;\r\n  this.promiseState({loading:false}).then(()=>{\r\n   let nowpromise = undefined;\r\n  // nowpromise=this.istodayholiday();\r\n   if (flag === \"one\") {\r\n                 document.getElementsByClassName(\"dataButton\")[0].style.backgroundColor = \"whitesmoke\";\r\n                 document.getElementsByClassName(\"dataButton\")[0].style.color = \"black\";\r\n                 document.getElementsByClassName(\"dataButton\")[1].style.backgroundColor = \"white\";\r\n                 document.getElementsByClassName(\"dataButton\")[1].style.color = \"black\";\r\n                   nowpromise = this.getupholdiayhandler();\r\n    }\r\n    else {\r\n      document.getElementsByClassName(\"dataButton\")[1].style.backgroundColor = \"whitesmoke\";\r\n                        document.getElementsByClassName(\"dataButton\")[1].style.color = \"black\";\r\n                        document.getElementsByClassName(\"dataButton\")[0].style.backgroundColor = \"white\";\r\n                        document.getElementsByClassName(\"dataButton\")[0].style.color = \"black\";\r\n                   nowpromise = this.getpassdatahandler();\r\n               }\r\n               nowpromise.then(() => this.props.onstatehandler(this.state.upcomingholidays, this.state.passedholidays, flag));\r\n  }\r\n);\r\n\r\n}\r\n\r\n\r\nrender(){\r\n  if (this.state.loading === true) {\r\n\r\n            return (getLoadingScreen(this.onclickhandler));\r\n\r\n      }\r\n      else\r\n          return (\r\n              <div>\r\n\r\n                  <h2 id=\"logo\" style={{ color: \"black\" }}>{this.istodayholiday}</h2>\r\n                  <button className=\"dataButton\" value=\"one\" onClick={this.onclickhandler}>Upcoming Holidays</button>\r\n                      <button className=\"dataButton\" value=\"two\" onClick={this.onclickhandler}>Passed Holidays</button>\r\n              </div>\r\n          )\r\n  }\r\n}\r\n\r\nexport default CurrentDate;\r\n"]},"metadata":{},"sourceType":"module"}