{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\RAJAN\\\\calendar\\\\src\\\\CurrentDate.js\";\nimport React, { Component } from 'react';\nimport { Grid, Typography } from '@material-ui/core';\n\nfunction getLoadingScreen(clickHandler) {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"dataButton\",\n    value: \"one\",\n    onClick: clickHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, \"Upcoming Holidays\"), React.createElement(\"button\", {\n    className: \"dataButton\",\n    value: \"two\",\n    onClick: clickHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, \"Passed Holidays\"), React.createElement(Grid, {\n    item: true,\n    lg: 3,\n    md: 4,\n    xs: 12,\n    style: {\n      margin: \"60px auto\",\n      textAlign: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"h2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, \"Loading....\")));\n} // function Noholidaytoday(clickHandler){\n//\n//   return(\n//     <div>\n//   <h2 id=\"logo\" style={{ color: \"black\" }}>No Holiday</h2>\n//     <button className=\"dataButton\" value=\"one\" onClick={clickHandler}>Upcoming Holidays</button>\n//         <button className=\"dataButton\" value=\"two\" onClick={clickHandler}>Passed Holidays</button>\n//         <Grid item lg={3} md={4} xs={12} style={{ margin: \"60px auto\", textAlign: \"center\" }}>\n//               <Typography variant=\"h2\" >\n//                   Loading....\n//                 </Typography>\n//           </Grid>\n//     </div>\n//   );\n// }\n//\n// function confirmholidaytoday(clickHandler){\n//\n//   return(\n//     <div>\n//   <h2 id=\"logo\" style={{ color: \"black\" }}>No Holiday</h2>\n//     <button className=\"dataButton\" value=\"one\" onClick={clickHandler}>Upcoming Holidays</button>\n//         <button className=\"dataButton\" value=\"two\" onClick={clickHandler}>Passed Holidays</button>\n//         <Grid item lg={3} md={4} xs={12} style={{ margin: \"60px auto\", textAlign: \"center\" }}>\n//               <Typography variant=\"h2\" >\n//                   Loading....\n//                 </Typography>\n//           </Grid>\n//     </div>\n//   );\n// }\n\n\nclass CurrentDate extends Component {\n  constructor(props) {\n    super();\n\n    this.promiseState = async state => new Promise(resolve => this.setState(state, resolve));\n\n    this.getupholdiayhandler = () => {\n      this.setState({\n        loading: true\n      });\n      return new Promise((Resolve, Reject) => {\n        var xhr = new XMLHttpRequest();\n        xhr.open(\"GET\", \"https://calendarific.com/api/v2/holidays?api_key=696fef8caac836370f2930195a5821426f3bf624&country=IN&year=2019\");\n        xhr.send();\n        var temp = [];\n\n        xhr.onreadystatechange = () => {\n          if (xhr.status == 200 && xhr.readyState == 4) {\n            var upcomingdata = JSON.parse(xhr.responseText);\n            temp = this.state.upcomingholidays;\n            temp = upcomingdata.response.holidays;\n            this.setState({\n              upcomingholidays: temp,\n              passedholidays: [],\n              loading: false\n            });\n            Resolve();\n          }\n        };\n      });\n    };\n\n    this.getpassdatahandler = () => {\n      this.setState({\n        loading: true\n      });\n      return new Promise((Resolve, Reject) => {\n        var xhr = new XMLHttpRequest();\n        xhr.open(\"GET\", \"https://calendarific.com/api/v2/holidays?api_key=696fef8caac836370f2930195a5821426f3bf624&country=IN&year=2019\");\n        xhr.send();\n        var temp = [];\n\n        xhr.onreadystatechange = () => {\n          if (xhr.status === 200 && xhr.readyState === 4) {\n            var passeddata = JSON.parse(xhr.responseText);\n            temp = this.state.passedholidays;\n            temp = passeddata.response.holidays;\n            this.setState({\n              upcomingholidays: [],\n              passedholidays: temp,\n              loading: false\n            });\n            Resolve();\n          }\n        };\n      });\n    };\n\n    this.onclickhandler = async e => {\n      var flag = e.target.value;\n      this.promiseState({\n        loading: false\n      }).then(() => {\n        let nowpromise = undefined; // nowpromise=this.istodayholiday();\n\n        if (flag === \"one\") {\n          document.getElementsByClassName(\"dataButton\")[0].style.backgroundColor = \"whitesmoke\";\n          document.getElementsByClassName(\"dataButton\")[0].style.color = \"black\";\n          document.getElementsByClassName(\"dataButton\")[1].style.backgroundColor = \"white\";\n          document.getElementsByClassName(\"dataButton\")[1].style.color = \"black\";\n          nowpromise = this.getupholdiayhandler();\n        } else {\n          document.getElementsByClassName(\"dataButton\")[1].style.backgroundColor = \"whitesmoke\";\n          document.getElementsByClassName(\"dataButton\")[1].style.color = \"black\";\n          document.getElementsByClassName(\"dataButton\")[0].style.backgroundColor = \"white\";\n          document.getElementsByClassName(\"dataButton\")[0].style.color = \"black\";\n          nowpromise = this.getpassdatahandler();\n        }\n\n        nowpromise.then(() => this.props.onstatehandler(this.state.upcomingholidays, this.state.passedholidays, flag));\n      });\n    };\n\n    this.istodayholiday = () => {\n      var a = new Date();\n      var dd = a.getDate();\n      var mm = a.getMonth();\n      var z;\n      var x;\n      var y; // this.setState({ loading: true });\n\n      var xhr = new XMLHttpRequest();\n      xhr.open(\"POST\", \"https://calendarific.com/api/v2/holidays?api_key=696fef8caac836370f2930195a5821426f3bf624&country=IN&year=2019&month=1&day=1\");\n      xhr.send();\n      var temp = [];\n\n      xhr.onreadystatechange = () => {\n        console.log(\"hello\");\n\n        if (xhr.status === 200 && xhr.readyState === 4) {\n          var passeddata = JSON.parse(xhr.responseText);\n          console.log(passeddata.response.holidays[0].name);\n          z = passeddata.response.holidays.length;\n          y = passeddata.response.holidays[0].name;\n          x = passeddata.response.holidays[0].date.type;\n        }\n      };\n\n      if (z == 1) {\n        console.log(\"rajan\");\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 167\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 168\n          },\n          __self: this\n        }, \"Hey, you got Holiday today.\"), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 169\n          },\n          __self: this\n        }, x + \"hi\"), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 170\n          },\n          __self: this\n        }, y + \"dfhj\"));\n      } else {\n        console.log(\"boiii\");\n        return React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 177\n          },\n          __self: this\n        }, \"No Holiday\");\n      }\n    };\n\n    this.state = {\n      loading: true,\n      upcomingholidays: [],\n      passedholidays: []\n    };\n  }\n\n  componentDidMount() {\n    setTimeout(() => {\n      this.onclickhandler({\n        target: {\n          value: \"one\"\n        }\n      });\n    }, 2000);\n  }\n\n  render() {\n    if (this.state.loading === true) {\n      return getLoadingScreen(this.onclickhandler);\n    } else return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"dataButton\",\n      value: \"one\",\n      onClick: this.onclickhandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, \"Upcoming Holidays\"), React.createElement(\"button\", {\n      className: \"dataButton\",\n      value: \"two\",\n      onClick: this.onclickhandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, \"Passed Holidays\"), this.istodayholiday(), console.log(\"jkj\"), \"// \", React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, \"wdawd\"));\n  }\n\n}\n\nexport default CurrentDate;","map":{"version":3,"sources":["C:\\Users\\RAJAN\\calendar\\src\\CurrentDate.js"],"names":["React","Component","Grid","Typography","getLoadingScreen","clickHandler","margin","textAlign","CurrentDate","constructor","props","promiseState","state","Promise","resolve","setState","getupholdiayhandler","loading","Resolve","Reject","xhr","XMLHttpRequest","open","send","temp","onreadystatechange","status","readyState","upcomingdata","JSON","parse","responseText","upcomingholidays","response","holidays","passedholidays","getpassdatahandler","passeddata","onclickhandler","e","flag","target","value","then","nowpromise","undefined","document","getElementsByClassName","style","backgroundColor","color","onstatehandler","istodayholiday","a","Date","dd","getDate","mm","getMonth","z","x","y","console","log","name","length","date","type","componentDidMount","setTimeout","render"],"mappings":"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","sourcesContent":["\r\nimport React, { Component } from 'react';\r\nimport { Grid, Typography } from '@material-ui/core';\r\n\r\nfunction getLoadingScreen(clickHandler){\r\n\r\n  return(\r\n    <div>\r\n\r\n    <button className=\"dataButton\" value=\"one\" onClick={clickHandler}>Upcoming Holidays</button>\r\n        <button className=\"dataButton\" value=\"two\" onClick={clickHandler}>Passed Holidays</button>\r\n        <Grid item lg={3} md={4} xs={12} style={{ margin: \"60px auto\", textAlign: \"center\" }}>\r\n              <Typography variant=\"h2\" >\r\n                  Loading....\r\n               </Typography>\r\n          </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\n// function Noholidaytoday(clickHandler){\r\n//\r\n//   return(\r\n//     <div>\r\n//   <h2 id=\"logo\" style={{ color: \"black\" }}>No Holiday</h2>\r\n//     <button className=\"dataButton\" value=\"one\" onClick={clickHandler}>Upcoming Holidays</button>\r\n//         <button className=\"dataButton\" value=\"two\" onClick={clickHandler}>Passed Holidays</button>\r\n//         <Grid item lg={3} md={4} xs={12} style={{ margin: \"60px auto\", textAlign: \"center\" }}>\r\n//               <Typography variant=\"h2\" >\r\n//                   Loading....\r\n//                 </Typography>\r\n//           </Grid>\r\n//     </div>\r\n//   );\r\n// }\r\n//\r\n// function confirmholidaytoday(clickHandler){\r\n//\r\n//   return(\r\n//     <div>\r\n//   <h2 id=\"logo\" style={{ color: \"black\" }}>No Holiday</h2>\r\n//     <button className=\"dataButton\" value=\"one\" onClick={clickHandler}>Upcoming Holidays</button>\r\n//         <button className=\"dataButton\" value=\"two\" onClick={clickHandler}>Passed Holidays</button>\r\n//         <Grid item lg={3} md={4} xs={12} style={{ margin: \"60px auto\", textAlign: \"center\" }}>\r\n//               <Typography variant=\"h2\" >\r\n//                   Loading....\r\n//                 </Typography>\r\n//           </Grid>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n\r\nclass CurrentDate extends Component\r\n{\r\n\r\n  constructor(props)\r\n  {\r\n    super();\r\n    this.state={\r\n      loading:true,\r\n      upcomingholidays:[],\r\n      passedholidays:[]\r\n    }\r\n\r\n  }\r\n  promiseState=async state=> new Promise(resolve=> this.setState(state,resolve));\r\n  componentDidMount(){\r\n    setTimeout(()=>{this.onclickhandler({target: {value:\"one\"}})},2000);\r\n  }\r\ngetupholdiayhandler=()=>\r\n{\r\n this.setState({ loading: true });\r\n  return new Promise((Resolve,Reject) =>{\r\n    var xhr=new XMLHttpRequest();\r\n    xhr.open(\"GET\",\"https://calendarific.com/api/v2/holidays?api_key=696fef8caac836370f2930195a5821426f3bf624&country=IN&year=2019\");\r\n    xhr.send();\r\n    var temp=[];\r\n    xhr.onreadystatechange=()=>{\r\n      if(xhr.status==200 && xhr.readyState==4)\r\n      {\r\n        var upcomingdata=JSON.parse(xhr.responseText);\r\n\r\n        temp=this.state.upcomingholidays;\r\n\r\n        temp=upcomingdata.response.holidays;\r\n\r\n        this.setState({upcomingholidays:temp,passedholidays: [],loading:false});\r\n        Resolve();\r\n\r\n      }\r\n    }\r\n  });\r\n}\r\n\r\ngetpassdatahandler = () => {\r\n       this.setState({ loading: true });\r\n       return new Promise((Resolve, Reject) => {\r\n           var xhr = new XMLHttpRequest();\r\n           xhr.open(\"GET\", \"https://calendarific.com/api/v2/holidays?api_key=696fef8caac836370f2930195a5821426f3bf624&country=IN&year=2019\");\r\n           xhr.send();\r\n           var temp = [];\r\n           xhr.onreadystatechange = () => {\r\n               if (xhr.status === 200 && xhr.readyState === 4) {\r\n                   var passeddata = JSON.parse(xhr.responseText);\r\n                   temp = this.state.passedholidays;\r\n                   temp = passeddata.response.holidays;\r\n                   this.setState({ upcomingholidays:[],passedholidays : temp, loading: false });\r\n                   Resolve();\r\n               }\r\n           }\r\n\r\n       });\r\n   }\r\n\r\nonclickhandler =async(e)=>{\r\n\r\n  var flag=e.target.value;\r\n  this.promiseState({loading:false}).then(()=>{\r\n   let nowpromise = undefined;\r\n  // nowpromise=this.istodayholiday();\r\n   if (flag === \"one\") {\r\n                 document.getElementsByClassName(\"dataButton\")[0].style.backgroundColor = \"whitesmoke\";\r\n                 document.getElementsByClassName(\"dataButton\")[0].style.color = \"black\";\r\n                 document.getElementsByClassName(\"dataButton\")[1].style.backgroundColor = \"white\";\r\n                 document.getElementsByClassName(\"dataButton\")[1].style.color = \"black\";\r\n                   nowpromise = this.getupholdiayhandler();\r\n    }\r\n    else {\r\n      document.getElementsByClassName(\"dataButton\")[1].style.backgroundColor = \"whitesmoke\";\r\n                        document.getElementsByClassName(\"dataButton\")[1].style.color = \"black\";\r\n                        document.getElementsByClassName(\"dataButton\")[0].style.backgroundColor = \"white\";\r\n                        document.getElementsByClassName(\"dataButton\")[0].style.color = \"black\";\r\n                   nowpromise = this.getpassdatahandler();\r\n               }\r\n               nowpromise.then(() => this.props.onstatehandler(this.state.upcomingholidays, this.state.passedholidays, flag));\r\n  }\r\n);\r\n\r\n}\r\nistodayholiday = ()=> {\r\n  var a = new Date();\r\n    var dd = a.getDate();\r\n    var mm = a.getMonth();\r\n    var z;\r\n    var x ;\r\n    var y;\r\n  // this.setState({ loading: true });\r\n      var xhr = new XMLHttpRequest();\r\n      xhr.open(\"POST\", \"https://calendarific.com/api/v2/holidays?api_key=696fef8caac836370f2930195a5821426f3bf624&country=IN&year=2019&month=1&day=1\");\r\n      xhr.send();\r\n      var temp = [];\r\n      xhr.onreadystatechange = () => {\r\n        console.log(\"hello\");\r\n          if (xhr.status === 200 && xhr.readyState === 4) {\r\n              var passeddata = JSON.parse(xhr.responseText);\r\n              console.log(passeddata.response.holidays[0].name);\r\n              z=passeddata.response.holidays.length;\r\n              y=passeddata.response.holidays[0].name;\r\n              x=passeddata.response.holidays[0].date.type;\r\n          }\r\n      }\r\n      if(z==1 )\r\n      {\r\n        console.log(\"rajan\");\r\n        return(\r\n<div>\r\n          <p>Hey, you got Holiday today.</p>\r\n          <p>{x+\"hi\"}</p>\r\n          <p>{y+\"dfhj\"}</p>\r\n          </div>\r\n        )\r\n      }\r\n      else{\r\n        console.log(\"boiii\");\r\n        return(\r\n          <p>No Holiday</p>\r\n        );\r\n      }\r\n\r\n}\r\n\r\n\r\nrender(){\r\n  if (this.state.loading === true) {\r\n\r\n            return (getLoadingScreen(this.onclickhandler));\r\n\r\n      }\r\n      else\r\n          return (\r\n              <div>\r\n\r\n\r\n                  <button className=\"dataButton\" value=\"one\" onClick={this.onclickhandler}>Upcoming Holidays</button>\r\n                      <button className=\"dataButton\" value=\"two\" onClick={this.onclickhandler}>Passed Holidays</button>\r\n                        {this.istodayholiday()}\r\n                        {console.log(\"jkj\")}\r\n                        // <h2>wdawd</h2>\r\n              </div>\r\n          )\r\n  }\r\n}\r\n\r\nexport default CurrentDate;\r\n"]},"metadata":{},"sourceType":"module"}